dependencies {
    testImplementation("com.google.guava:guava:${properties["guavaVersion"]}")
    testImplementation("com.google.guava:guava-testlib:${properties["guavaVersion"]}")
    testImplementation("com.google.jimfs:jimfs:${properties["jimfsVersion"]}")
    testImplementation("co.paralleluniverse:quasar-core:${properties["quasarVersion11"]}")
    testImplementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${properties["kotlinVersion"]}")
    testImplementation("org.jetbrains.kotlin:kotlin-reflect:${properties["kotlinVersion"]}")
    testImplementation("org.jetbrains.kotlin:kotlin-test:${properties["kotlinVersion"]}")
    testImplementation("org.bouncycastle:bcprov-jdk15on:${properties["bouncycastleVersion"]}")
    testImplementation("org.bouncycastle:bcpkix-jdk15on:${properties["bouncycastleVersion"]}")
    testImplementation("com.nhaarman:mockito-kotlin:${properties["mockitoKotlinVersion"]}")
    testImplementation("junit:junit:${properties["junitVersion"]}")
    testImplementation("org.assertj:assertj-core:${properties["assertjVersion"]}")
    testImplementation("io.reactivex:rxjava:${properties["rxjavaVersion"]}")
    testImplementation("org.hamcrest:hamcrest-library:${properties["hamcrestVersion"]}")
    testImplementation("com.natpryce:hamkrest:${properties["hamkrestVersion"]}")
    testImplementation("org.slf4j:slf4j-api:${properties["slf4jVersion"]}")
    testImplementation("com.esotericsoftware:kryo:${properties["kryoVersion"]}")
    implementation("org.hibernate:hibernate-core:${properties["hibernateVersion"]}")

    testImplementation(project(":common:validation"))
    testImplementation(project(":core"))
    testImplementation(project(":core", "testArtifacts"))
    testImplementation(project(":core-test-utils"))
    testImplementation(project(":finance:contracts"))
    testImplementation(project(":finance:workflows"))
    testImplementation(project(":node-api"))
    testImplementation(project(":serialization"))
    testImplementation(project(":test-utils"))
    testImplementation(project(":test-common"))
}